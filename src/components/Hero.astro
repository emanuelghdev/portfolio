---
import SocialButton from "./SocialButton.astro"
import GitHubIcon from "./icons/GitHubIcon.astro"
import LinkedInIcon from "./icons/LinkedInIcon.astro"
import MailIcon from "./icons/MailIcon.astro"
import ResumeIcon from "./icons/ResumeIcon.astro"
import photoImg from "../assets/Photo.webp?url"
import { getTranslations } from '../utils/i18n'

const t = getTranslations()
---

<!-- Presentación -->
<article class="flex flex-col sm:flex-row items-center gap-x-6 pt-4 mb-10 sm:mb-8 lg:mb-16 alig-center">
    <img class="rounded-full size-36 lg:size-44 xl:size-52 mb-4" src={photoImg} alt="Foto de Emanuel">
    <div class="flex flex-col items-center w-full sm:gap-y-4 lg:gap-y-6">
        <h1 class="text-[2.5rem] sm:text-5xl lg:text-7xl font-bold flex flex-row gap-x-4 lg:pb-2">
            Emanuel Giraldo
        </h1>
        <h1 class="text-3xl lg:text-5xl font-bold bg-[linear-gradient(90deg,#00a3ff,#6978d1_55%,#945dd6)] bg-clip-text text-transparent flex flex-row gap-x-4">
            Full Stack Developer
        </h1>
    </div>
</article>

<!-- Botones contacto -->
<nav class="flex flex-wrap md:flex-row justify-center gap-x-2 lg:gap-x-4 gap-y-4 mt-4 lg:mt-8">
    <SocialButton href="mailto:emanuelghdev@gmail.com"><MailIcon class="size-6"/>
        <span data-i18n="buttons.contact">{t.buttons.contact}</span>
    </SocialButton>
    <SocialButton href="https://www.linkedin.com/in/emanuelgh"><LinkedInIcon class="size-5"/>LinkedIn</SocialButton>
    <SocialButton href="https://github.com/emanuelghdev"><GitHubIcon class="size-6"/>GitHub</SocialButton>
    <SocialButton href="/Emanuel_Giraldo_Herrera_es.pdf" download="Emanuel_Giraldo_Herrera.pdf" id="resume-link" data-resume>
        <ResumeIcon class="size-6"/>
        <span data-i18n="buttons.resume">{t.buttons.resume}</span>
    </SocialButton>
</nav>

<!-- Script para actualizar el idioma -->
<script type="module" src="/i18n.js"></script>

<!-- Script cliente que actualiza el enlace del CV según el idioma -->
<script type="module">
    // Función que decide la ruta y nombre según idioma
    function resolvePdfForLang(lang) {
        const low = (lang || '').toString().toLowerCase();
        const isEn = low.startsWith('en');

        return {
            href: isEn ? '/Emanuel_Giraldo_Herrera_en.pdf' : '/Emanuel_Giraldo_Herrera_es.pdf',
            download: isEn ? 'Emanuel_Giraldo_Herrera.pdf' : 'Emanuel_Giraldo_Herrera.pdf'
        };
    }

    function updateResumeLink() {
        // Buscamos el wrapper que marcamos con data-resume
        const wrapper = document.querySelector('[data-resume]') || document.getElementById('resume-link');
        if (!wrapper) return;

        let anchor = (wrapper.tagName === 'A') ? wrapper : wrapper.querySelector('a');
        if (!anchor) anchor = wrapper;

        // Determinamos el idioma
        const docLang = document.documentElement.lang || navigator.language || 'es';
        const { href, download } = resolvePdfForLang(docLang);

        // Actualizamos atributos
        try {
            anchor.setAttribute('href', href);
            anchor.setAttribute('download', download);

            // Aseguraramos que si el enlace se abre en nueva pestaña no quede inseguro
            anchor.setAttribute('rel', anchor.getAttribute('rel') || 'noopener');
        } catch (e) {
            try {
                wrapper.setAttribute('href', href);
                wrapper.setAttribute('download', download);
            } catch (e2) {
                // Si aun así falla, no hacemos nada
                console.warn('No se pudo actualizar el enlace del CV automáticamente.', e2);
            }
        }
    }

    // Ejecutar una vez al cargar el script
    updateResumeLink();

    // Escuchamos el evento
    window.addEventListener('languageChange', (e) => {
        const lang = e?.detail || null;
        updateResumeLink(lang);
    });

    // Observador por si cambia document.documentElement.lang dinámicamente
    const htmlEl = document.documentElement;
    const observer = new MutationObserver((mutations) => {
        for (const m of mutations) {
            if (m.type === 'attributes' && m.attributeName === 'lang') {
                updateResumeLink();
            }
        }
    });

    observer.observe(htmlEl, { attributes: true })
</script>